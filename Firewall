#!/bin/sh
#
 
#
 PC1_IP="172.16.30.16"  # Ktu i radhit adresat per te cilat don me par perjashtime dhe nderton rregulla te reja me posht 
 PC2_IP="172.16.30.105"
 PC3_IP="172.16.0.100"
 PC4_IP="172.16.100.114"
 PC5_IP="172.16.100.116"

 echo "Adresimi statik i vendosur tashme u lexua"

# Iptables firewall script per Linux me version 2.4 kernel
# 
# 
#
###############################################################################
# 
# Preferencat
#


SYSCTL="/sbin/sysctl -w" 

# SYSCTL=""

# Pathi i IPTables - Ndrysho nese osht e nevojshme

IPT="/sbin/iptables"
IPTS="/sbin/iptables-save"
IPTR="/sbin/iptables-restore"

# Interface
INET_IFACE="wlp2s0"             # int name
INET_ADDRESS="192.168.43.149"   # ip add

# Informacioni mbi interface dhe adresimin 
LOCAL_IFACE="wlp2s0"
LOCAL_IP="192.168.43.1"         # Gateway
LOCAL_NET="192.168.43.0/24"     # Network
LOCAL_BCAST="192.168.43.255"    # Broadcast

# Localhost

LO_IFACE="lo"
LO_IP="127.0.0.1"

 echo "Ip addresimi u ri vendos"
# ############ ############## ########### ############# ############## ########
if [ "$1" = "save" ]
then
	echo -n "Saving firewall to /etc/sysconfig/iptables ... "
	$IPTS > /etc/sysconfig/iptables
	echo "done"
	exit 0
elif [ "$1" = "restore" ]
then
	echo -n "Restoring firewall from /etc/sysconfig/iptables ... "
	$IPTR < /etc/sysconfig/iptables
	echo "done"
	exit 0
fi

###############################################################################
#
echo "Ne process hapi 2 "
#

# kernel moduli

# 
#
# /sbin/depmod -a
#
#
#
# core netfilter module
/sbin/modprobe ip_tables

# the stateful connection tracking module
/sbin/modprobe ip_conntrack

# filter table module
# /sbin/modprobe iptable_filter

# mangle table module
# /sbin/modprobe iptable_mangle

# nat table module
# /sbin/modprobe iptable_nat

# LOG target module
# /sbin/modprobe ipt_LOG

# This is used to limit the number of packets per sec/min/hr
# /sbin/modprobe ipt_limit

# masquerade target module
# /sbin/modprobe ipt_MASQUERADE

# filter using owner as part of the match
# /sbin/modprobe ipt_owner

# REJECT target drops the packet and returns an ICMP response.
# The response is configurable.  By default, connection refused.
# /sbin/modprobe ipt_REJECT

# This target allows packets to be marked in the mangle table
# /sbin/modprobe ipt_mark

# This target affects the TCP MSS
# /sbin/modprobe ipt_tcpmss

# This match allows multiple ports instead of a single port or range
# /sbin/modprobe multiport

# This match checks against the TCP flags
# /sbin/modprobe ipt_state

# This match catches packets with invalid flags
# /sbin/modprobe ipt_unclean

# The ftp nat module is required for non-PASV ftp support
/sbin/modprobe ip_nat_ftp

# the module for full ftp connection tracking
/sbin/modprobe ip_conntrack_ftp

# the module for full irc connection tracking
#/sbin/modprobe ip_conntrack_irc


###############################################################################
#
# Kernel Parameter Config
#
# 
# Kerkon me bo enable ipv4 forward 
# 
# Preferencat FORWARD_IPV4 ne /etc/sysconfig/network
# mundet mu gjet ne /etc/sysctl.conf
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/ip_forward
else
    $SYSCTL net.ipv4.ip_forward="1"
fi

# 
# kjo nese kemi address dinamike \(slip, ppp, dhcp\).
#if [ "$SYSCTL" = "" ]
#then
#    echo "1" > /proc/sys/net/ipv4/ip_dynaddr
#else
#    $SYSCTL net.ipv4.ip_dynaddr="1"
#fi

# Kjo e active SYN flood protection.
# 
# service during a denial of service attack.
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/tcp_syncookies
else
    $SYSCTL net.ipv4.tcp_syncookies="1"
fi

# This enables source validation by reversed path according to RFC1812.
# In other words, did the response packet originate from the same interface
# through which the source packet was sent?  It's recommended for single-homed
# systems and routers on stub networks.  Since those are the configurations
# this firewall is designed to support, I turn it on by default.
# Turn it off if you use multiple NICs connected to the same network.
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/conf/all/rp_filter
else
    $SYSCTL net.ipv4.conf.all.rp_filter="1"
fi

# This option allows a subnet to be firewalled with a single IP address.
# It's used to build a DMZ.  Since that's not a focus of this firewall
# script, it's not enabled by default, but is included for reference.
#
#if [ "$SYSCTL" = "" ]
#then
#    echo "1" > /proc/sys/net/ipv4/conf/all/proxy_arp
#else
#    $SYSCTL net.ipv4.conf.all.proxy_arp="1"
#fi

# 

# Rregulla instruksion per kernel me i injoru paketat icmp
# echo kerkesa dergohen ne broadcast address
# Kjo e nje numer te sulmeve Dos 
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
else
    $SYSCTL net.ipv4.icmp_echo_ignore_broadcasts="1"
fi

# 
# Mundet mu konsideru si opcion me rrezik kshtuqe munesh me lan off.
if [ "$SYSCTL" = "" ]
then
    echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route
else
    $SYSCTL net.ipv4.conf.all.accept_source_route="0"
fi

# Ky opcion munet me bo disable ICMP request dhe redirect
# Konsiderohet i rrezikshem si veprim .
#if [ "$SYSCTL" = "" ]
#then
#    echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects
#else
#    $SYSCTL net.ipv4.conf.all.accept_redirects="0"
#fi

#
# Ktu pranohen veq prej gateway.
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/conf/all/secure_redirects
else
    $SYSCTL net.ipv4.conf.all.secure_redirects="1"
fi

# Log paketat.
if [ "$SYSCTL" = "" ]
then
    echo "1" > /proc/sys/net/ipv4/conf/all/log_martians
else
    $SYSCTL net.ipv4.conf.all.log_martians="1"
fi


###############################################################################
#
# Krejt rregullat ma heret shkojn per lesh 
#

echo "Ne lesh krejt rregullave paraprake"

# Rregullat baze
$IPT -P INPUT ACCEPT
$IPT -P FORWARD ACCEPT
$IPT -P OUTPUT ACCEPT
$IPT -t nat -P PREROUTING ACCEPT
$IPT -t nat -P POSTROUTING ACCEPT
$IPT -t nat -P OUTPUT ACCEPT
$IPT -t mangle -P PREROUTING ACCEPT
$IPT -t mangle -P OUTPUT ACCEPT

# Ktu po i eleminoj rregullat paraprake
$IPT -F
$IPT -t nat -F
$IPT -t mangle -F

# Ktu i eleminon rregullat qe sjon baze
$IPT -X
$IPT -t nat -X
$IPT -t mangle -X

if [ "$1" = "stop" ]
then
	echo "Firewall flushed!  Esht to run pa mbrojtje firewall."
	exit 0
fi

###############################################################################
#
# Configurimi i rregullave
#

###############################################################################
#
# Filtrimi Tabela e Rregullave 
#
###############################################################################

# Ktu po i vendos rregullat baze INPUT OUTPUT FORWARD

$IPT -P INPUT DROP
$IPT -P OUTPUT DROP
$IPT -P FORWARD DROP

###############################################################################
#
# Specifikat
#
# - rregullat ne vijim -


# Krijon rregull me i filtru paketat po thojm paketat te zeza
$IPT -N bad_packets

# Krijon rregull me i filtru tcp paketat po thojm paketat te zeza tcp
$IPT -N bad_tcp_packets

# Rregull mbi icmp paketat tcp (in and out) dhe udp paketat (in)

$IPT -N icmp_packets

# Perdoret per UDP paketat inbound nga internet
$IPT -N udp_inbound

# Perdoret per me i blloku outbound UDP sherbimet nga internal network
# Rregulla baze e lejon
$IPT -N udp_outbound

# Used to allow inbound services if desired
# Default fail except for established sessions
$IPT -N tcp_inbound

# Used to block outbound services from internal network
# Default to allow all
$IPT -N tcp_outbound

###############################################################################
#
# 
#

# Paketat e zeza
#

# Ndalon paketat qe vijn nga external interface
#
$IPT -A bad_packets -p ALL -i $INET_IFACE -s $LOCAL_NET -j LOG \
    --log-prefix "fp=bad_packets:2 a=DROP "
$IPT -A bad_packets -p ALL -i $INET_IFACE -s $LOCAL_NET -j DROP

# Ndal paketat palidhje
$IPT -A bad_packets -p ALL -m state --state INVALID -j LOG \
    --log-prefix "fp=bad_packets:1 a=DROP "

$IPT -A bad_packets -p ALL -m state --state INVALID -j DROP

# Kontroll paketat tcp per probleme shtese
$IPT -A bad_packets -p tcp -j bad_tcp_packets

# Kthehen
$IPT -A bad_packets -p ALL -j RETURN

# bad_tcp_packets
#
# 
# Qdo connection i ri provon me dergu syn paketa kshtu qe kjo mas shtes kunder skanerave
# Kjo i gjun posht paketat
#
$IPT -A bad_tcp_packets -p tcp -i $LOCAL_IFACE -j RETURN

#
#
# Ketu sigurohemi qe krijohen log gjithashtu drop packet
#
# $IPT -A bad_tcp_packets -p tcp -i $LOCAL_IFACE ! --syn -m state \
#     --state NEW -j DROP

$IPT -A bad_tcp_packets -p tcp ! --syn -m state --state NEW -j LOG \
    --log-prefix "fp=bad_tcp_packets:1 a=DROP "
$IPT -A bad_tcp_packets -p tcp ! --syn -m state --state NEW -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL NONE -j LOG \
    --log-prefix "fp=bad_tcp_packets:2 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL NONE -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL ALL -j LOG \
    --log-prefix "fp=bad_tcp_packets:3 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL ALL -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL FIN,URG,PSH -j LOG \
    --log-prefix "fp=bad_tcp_packets:4 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j LOG \
    --log-prefix "fp=bad_tcp_packets:5 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags SYN,RST SYN,RST -j LOG \
    --log-prefix "fp=bad_tcp_packets:6 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags SYN,RST SYN,RST -j DROP

$IPT -A bad_tcp_packets -p tcp --tcp-flags SYN,FIN SYN,FIN -j LOG \
    --log-prefix "fp=bad_tcp_packets:7 a=DROP "
$IPT -A bad_tcp_packets -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

# 
$IPT -A bad_tcp_packets -p tcp -j RETURN

# icmp_packets 
#
# Veq per inbound icmp paketat.
# Tipi 8 (Echo Request) by default eshte off
# Ndrysho nese te duhet, ndryshe nuk nje i dukshem prej tjerve .
# 11 (Time Exceeded) veq qekjo o lshut default
# 
# 
# 
# 
# Paketat ICMP duhet te përshtaten ne nje frame Layer 2, keshtu qe ata duhet
# mos te jene te fragmentuar. Paketat ICMP te fragmentuara jane nje shenje tipike
# e një sulmi DOS.

$IPT -A icmp_packets --fragment -p ICMP -j LOG \
    --log-prefix "fp=icmp_packets:1 a=DROP "
$IPT -A icmp_packets --fragment -p ICMP -j DROP

# Echo - mos kommentimi lejon sistemin tuaj të pinged.
# Hiqni komentin e komandes LOG nese dëshironi te regjistroni edhe perpjekjet per PING

# $IPT -A icmp_packets -p ICMP -s 0/0 --icmp-type 8 -j LOG \
#    --log-prefix "fp=icmp_packets:2 a=ACCEPT "
# $IPT -A icmp_packets -p ICMP -s 0/0 --icmp-type 8 -j ACCEPT
# By default, Ndalen ping pa Logging. 
# Blaster dhe krimbat e tjerë kanë sisteme të infektuara që prishin ping.
# Komentoni vijën më poshtë në qoftë se doni pings logged

$IPT -A icmp_packets -p ICMP -s 0/0 --icmp-type 8 -j DROP

# Time Exceeded
$IPT -A icmp_packets -p ICMP -s 0/0 --icmp-type 11 -j DROP  # ndrysho nese eshte e nevojshme

# Palidhje, e kthen, kshtu e gjen log
$IPT -A icmp_packets -p ICMP -j RETURN

# TCP & UDP
# 
# 
# 

# udp_inbound
# 
# 
# I shmangin paketat netbios (windows) edhe nuk ruan log
# 
# I drop packetat per netbios
# Kjo rregulla e ardhsme nese nuk validohet si drop by default eshte ACCEPT
# NETBIOS request. 
$IPT -A udp_inbound -p UDP -s 0/0 --destination-port 137 -j DROP
$IPT -A udp_inbound -p UDP -s 0/0 --destination-port 138 -j DROP

# Ident requests (Port 113) gjithqysh duhet me lan DROP ose REJECT po ne default osht DROP.
$IPT -A udp_inbound -p UDP -s 0/0 --destination-port 113 -j REJECT

# E kom lan ne koment po nese duhet e aktivizojm protokoll ne udp .
# $IPT -A udp_inbound -p UDP -s 0/0 --destination-port 113 -j ACCEPT
#
# #### ####### ####### ######
# 
######## ####### ####### ####
# DNS Server
# Dns serverin e kom lan open (ACCEPT) shkaku qe nuk perkthehen domain ne ip
$IPT -A udp_inbound -p UDP -s 0/0 --destination-port 53 -j ACCEPT

# Nese kem problem me query thjesht e aktivizojm qet rregullen, aktualisht osht si koment
# $IPT -A udp_inbound -p UDP -s 0/0 --source-port 53 -j ACCEPT


# 
$IPT -A udp_inbound -p UDP -j RETURN

# udp_outbound chain
# Kjo rregulla perdoret ne rastet kur don me nal forwarding ne rrjeta private 


# ACCEPT
$IPT -A udp_outbound -p UDP -s 0/0 -j ACCEPT

# tcp_inbound chain
#
# Kjo rregull perdoret ne per me leju inbound connect ne 
# system/gateway. By default osht 'pa validume'
# 

# Requests (Port 113) gjithsesi duhet me lan Reject ndryshe ne default e ki si DROP 
# 
# tcp_inbound rule.
$IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 113 -j REJECT

# 
# $IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 113 -j ACCEPT

# 
#

# DNS Server - Lejon tcp connection default osht disable nese duhet me active 
# veq e hjek prej formes koment.  
# 
# $IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 53 -j ACCEPT

# Web Server

# HTTP
$IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 80 -j DROP

# HTTPS (Secure Web Server)
$IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 443 -j ACCEPT

# Ktu e kom lan si koment e kom aktivizu ma posht ma ne detaje.
# $IPT -A tcp_inbound -p TCP -s 0/0 --destination-port 22 -j ACCEPT


#  Return
$IPT -A tcp_inbound -p TCP -j RETURN

# tcp_outbound 
#
# RRegulla perdoret ne rrjet private me ndal forward, ndryshe perdoret per forward prej rrjetes te brendshme
# Block IRC
$IPT -A tcp_outbound -p TCP -s 0/0 --destination-port 194 -j REJECT

# Block SSH ne outband
$IPT -A tcp_outbound -p TCP -s 0/0 --destination-port 22 -j REJECT
# Ketu me ne detaje e kom leju connection ne SSH ne inbound dhe outbound per PC1
iptables -A INPUT -p tcp -s $PC1_IP -d $INET_ADDRESS --sport 513:65535 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s $INET_ADDRESS -d $PC1_IP --sport 22 --dport 513:65535 -m state --state ESTABLISHED -j ACCEPT



###############################################################################
#
# INPUT Rregulla tjera
#

# 

# Lejon krejt ne localhost interface
$IPT -A INPUT -p ALL -i $LO_IFACE -j ACCEPT

# I Drop packetat e kqia
$IPT -A INPUT -p ALL -j bad_packets

# Disa DOCSIS dergojn IGMP multicast per me gjet Paisje End-Devices
# Multicast paketat kan destinacion add 224.0.0.1
# 
# 
# Per mos me pas impakt IGMP multicast prej '-p ALL' ndrysho ne '-p 2'
# 
# 
# Drop.
$IPT -A INPUT -p ALL -d 224.0.0.1 -j DROP
# Per me peranu paketa.
# $IPT -A INPUT -p ALL -d 224.0.0.1 -j ACCEPT

# Rregull per rrjetin privat dmth local interface me local network | local interface me local broadcaste
$IPT -A INPUT -p ALL -i $LOCAL_IFACE -s $LOCAL_NET -j ACCEPT
$IPT -A INPUT -p ALL -i $LOCAL_IFACE -d $LOCAL_BCAST -j ACCEPT


# Inbound internet Pack Rules

# Pranon establish connection
$IPT -A INPUT -p ALL -i $INET_IFACE -m state --state ESTABLISHED,RELATED \
     -j ACCEPT

# Kjo i kthen ne reset statusin
$IPT -A INPUT -p TCP -i $INET_IFACE -j tcp_inbound
$IPT -A INPUT -p UDP -i $INET_IFACE -j udp_inbound
$IPT -A INPUT -p ICMP -i $INET_IFACE -j icmp_packets

# 
#
# broadcast protocols.
$IPT -A INPUT -m pkttype --pkt-type broadcast -j DROP

# Log paketave qe dosent make sense
$IPT -A INPUT -j LOG --log-prefix "fp=INPUT:99 a=DROP "

###############################################################################
#
# FORWARD 
#

echo "Rregullat per Forward"

# Perdoret nese forward per rrjet private
# Drop bad packets
$IPT -A FORWARD -p ALL -j bad_packets

# Accept TCP packets we want to forward from internal sources
$IPT -A FORWARD -p tcp -i $LOCAL_IFACE -j tcp_outbound

# Accept UDP packets we want to forward from internal sources
$IPT -A FORWARD -p udp -i $LOCAL_IFACE -j udp_outbound

# If not blocked, accept any other packets from the internal interface
$IPT -A FORWARD -p ALL -i $LOCAL_IFACE -j ACCEPT

# Deal with responses from the internet
$IPT -A FORWARD -i $INET_IFACE -m state --state ESTABLISHED,RELATED \
     -j ACCEPT

# Log packets that still don't match
$IPT -A FORWARD -j LOG --log-prefix "fp=FORWARD:99 a=DROP "

###############################################################################
#
# OUTPUT 
#

#
# Paketat Invalid Drop kejt
# Mbrojtje shtes nga exploit te ndryshem
$IPT -A OUTPUT -m state -p icmp --state INVALID -j DROP

# Localhost
$IPT -A OUTPUT -p ALL -s $LO_IP -j ACCEPT
$IPT -A OUTPUT -p ALL -o $LO_IFACE -j ACCEPT

# Internal network
$IPT -A OUTPUT -p ALL -s $LOCAL_IP -j ACCEPT
$IPT -A OUTPUT -p ALL -o $LOCAL_IFACE -j ACCEPT

# Internet
$IPT -A OUTPUT -p ALL -o $INET_IFACE -j ACCEPT

# Log paketave qe dosent make sense
$IPT -A OUTPUT -j LOG --log-prefix "fp=OUTPUT:99 a=DROP "

###############################################################################
#
# nat tabela
#
###############################################################################

#

echo "Ne process rregullat e NAT"

###############################################################################
#
# PREROUTING chain
#
# Skom vendos kurgjo! 

###############################################################################
#
# POSTROUTING chain
#

$IPT -t nat -A POSTROUTING -o $INET_IFACE \
     -j SNAT --to-source $INET_ADDRESS

###############################################################################
#
# mangle table
#
###############################################################################

